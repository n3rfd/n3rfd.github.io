{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","id","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNA2DeA,MAxDf,WACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAEvCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYC,GAAG,kBAC1BJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,SACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,YACrBF,EAAAC,EAAAC,cAAA,4CAEFF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,2BAClBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,KAAKE,KAAK,oCAAvB,+BACvCL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,uBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,KAAKC,GAAG,kBAAiBJ,EAAAC,EAAAC,cAAA,uBACvCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,sBAAmBF,EAAAC,EAAAC,cAAA,wBAAuBF,EAAAC,EAAAC,cAAA,qBAAkBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,yDAC/EH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,kFACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,uDAEvBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,KAAKC,GAAG,kBAAiBJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,mBACvCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,qEACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,iBACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,gBACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,gBACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,gBACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,oBAEvBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,KAAKC,GAAG,kBAAiBJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,oBACvCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,uBACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,qBACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,uCACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,YAEvBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,KAAKC,GAAG,kBAAiBJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,iBACvCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,8CACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,iDACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,kDAEvBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,KAAKC,GAAG,kBAAiBJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,gBACvCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,8DACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,+CAEvBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,KAAKC,GAAG,kBAAiBJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,iBACvCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,+BACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAKH,EAAAC,EAAAC,cAAA,oDCzCTI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7b62bae2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div>\n          <p className=\"c12\"><span className=\"c11 c13\"></span></p>\n      </div>\n      <p className=\"c15 title\" id=\"h.5rf9wr4r3no2\">\n        <span className=\"c11\">Hello</span>\n        <span className=\"c9\"><br /></span>\n        <span>I&rsquo;m Neftali Papelleras</span>\n      </p>\n      <p className=\"c3\"><span className=\"c16\">Cebu City, Philippines</span></p>\n      <p className=\"c3\"><span className=\"c6\"><a className=\"c5\" href=\"mailto:iam@neftalipapelleras.com\">iam@neftalipapelleras.com</a></span></p>\n      <p className=\"c3\"><span className=\"c8\">(+63) 932 919 5661</span></p>\n      <h1 className=\"c0\" id=\"h.628phil8unj9\"><span>Skills</span></h1>\n      <ul className=\"c7 lst-kix_suhlr010mmby-0 start\">\n          <li className=\"c2\"><span>Design</span><span>&nbsp;and </span><span>Build</span><span className=\"c1\">&nbsp;APIs and API integrations for cloud applications</span></li>\n          <li className=\"c2\"><span className=\"c1\">Build Front-End websites using Reactjs/Next.js, Vue.js/Nuxt.js, and Bootstrap</span></li>\n          <li className=\"c2\"><span className=\"c1\">Design AWS Serverless / Microservices Application</span></li>\n      </ul>\n      <h1 className=\"c0\" id=\"h.tk8mdbfq6hvl\"><span className=\"c4\">Back-End Stack</span></h1>\n      <ul className=\"c7 lst-kix_41m63nyv7fxz-0 start\">\n          <li className=\"c2\"><span className=\"c1\">AWS Lambda Functions using Node.js Runtime and Express Framework</span></li>\n          <li className=\"c2\"><span className=\"c1\">AWS DynamoDb</span></li>\n          <li className=\"c2\"><span className=\"c1\">AWS GraphQL</span></li>\n          <li className=\"c2\"><span className=\"c1\">AWS AppSync</span></li>\n          <li className=\"c2\"><span className=\"c1\">AWS Cognito</span></li>\n          <li className=\"c2\"><span className=\"c1\">MySQL Database</span></li>\n      </ul>\n      <h1 className=\"c0\" id=\"h.axynvtxwqtii\"><span className=\"c4\">Front-End Stack</span></h1>\n      <ul className=\"c7 lst-kix_41m63nyv7fxz-0\">\n          <li className=\"c2\"><span className=\"c1\">React.js / Next.js</span></li>\n          <li className=\"c2\"><span className=\"c1\">Vue.js / Nuxt.js</span></li>\n          <li className=\"c2\"><span className=\"c1\">Bootstrap 4 / Bootstrap for Vue.js</span></li>\n          <li className=\"c2\"><span className=\"c1\">JQuery</span></li>\n      </ul>\n      <h1 className=\"c0\" id=\"h.oze3tgkrob2d\"><span className=\"c4\">Server Stack</span></h1>\n      <ul className=\"c7 lst-kix_41m63nyv7fxz-0\">\n          <li className=\"c2\"><span className=\"c1\">Linux Administration - CentOS 6/7, Ubuntu</span></li>\n          <li className=\"c2\"><span className=\"c1\">AWS Services - EC2, EBS, Lambda, API Gateway</span></li>\n          <li className=\"c2\"><span className=\"c1\">Serverless w/ CloudFormation / SAM / Amplify</span></li>\n      </ul>\n      <h1 className=\"c0\" id=\"h.7ue6taixdtak\"><span className=\"c4\">Tests Stack</span></h1>\n      <ul className=\"c7 lst-kix_41m63nyv7fxz-0\">\n          <li className=\"c2\"><span className=\"c1\">Phpunit for Unit and Integration Tests with Code Coverage</span></li>\n          <li className=\"c2\"><span className=\"c1\">Mocha and Chai Test Framework for Node.js</span></li>\n      </ul>\n      <h1 className=\"c0\" id=\"h.o6wbtylwhp7d\"><span className=\"c4\">Mobile Stack</span></h1>\n      <ul className=\"c7 lst-kix_41m63nyv7fxz-0\">\n          <li className=\"c2\"><span className=\"c1\">Native Android Development</span></li>\n          <li className=\"c2\"><span>iOS Development with Objective-C</span></li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}